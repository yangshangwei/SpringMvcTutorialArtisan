package com.artisan.controller;

import java.io.BufferedInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.OutputStream;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;

import com.artisan.domain.Login;

@Controller
public class ResourceController {

	@RequestMapping(value = "/login")
	public String login(@ModelAttribute Login login, HttpSession httpSession, Model model) {
		model.addAttribute("login", new Login());
		if ("artisan".equals(login.getUserName()) && "artisan123".equals(login.getPassword())) {
			httpSession.setAttribute("loggedIn", Boolean.TRUE);
			return "Main";
		} else {
			return "LoginForm";
		}
	}

	@RequestMapping(value = "/resource_download")
	public String downLoadResource(HttpSession session, HttpServletRequest request, HttpServletResponse response) {

		if (session == null && session.getAttribute("loggedIn") == null) {
			return "LoginForm";
		}

		String dataDirectory = request.getServletContext().getRealPath("/WEB-INF/data");
		File file = new File(dataDirectory, "artisan.pdf");
		if (file.exists()) {
			response.setContentType("application/pdf");
			response.addHeader("Content-Disposition", "attachment; filename=artisan.pdf");
			// 如果是中文名称
			String fileNameHeader=new String(file.getBytes(), "ISO-8859-1"); // 可行的
			response.addHeader("Content-Disposition", "attachment; filename=" + new String(file.getBytes("utf-8"),"iso-8859-1"));
			byte[] buffer = new byte[1024];
			FileInputStream fis = null;
			BufferedInputStream bis = null;
			
			// JDK7 以前的写法
			// try {
			// fis = new FileInputStream(file);
			// bis = new BufferedInputStream(fis);
			// OutputStream os = response.getOutputStream();
			// int i = bis.read(buffer);
			// while (i != -1) {
			// os.write(buffer, 0, i);
			// i = bis.read(buffer);
			// }
			// } catch (IOException ex) {
			// // do something,
			// // probably forward to an Error page
			// } finally {
			// if (bis != null) {
			// try {
			// bis.close();
			// } catch (IOException e) {
			// }
			// }
			// if (fis != null) {
			// try {
			// fis.close();
			// } catch (IOException e) {
			// }
			// }
			// }
			//

			// Java 7, use try-with-resources,自动释放资源
			try (OutputStream os = response.getOutputStream();) {
				fis = new FileInputStream(file);
				bis = new BufferedInputStream(fis);
				int i = bis.read(buffer);
				while (i != -1) {
					os.write(buffer, 0, i);
					i = bis.read(buffer);
				}
			} catch (Exception e) {
				// do something, 
                // probably forward to an Error page
			}
		}
		return null;
	}
}
